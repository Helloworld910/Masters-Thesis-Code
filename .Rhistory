# Libraries --------------------------------------------------------------
library(tidyverse)
library(carData)
head(WVS)
data("WVS")
library(nnet) # load the function
MNL$poverty2 = relevel(poverty, ref = "Too Little")
#Analysis
install.packages("Rtools")
#Analysis
install.packages("Rtools")
#Analysis
install.packages("Rtools")
to_an_slice %>%
unnest_tokens(sentences, data.body, token = "sentences") %>%
mutate(sent_nr = row_number()) %>%
unnest_tokens(words, sentences, token="words")
test <- read.csv(file = "redditComments.csv")
to_an <- as_tibble(test)
to_an %<>%
filter(data.author != "AutoModerator")
to_an_slice <- to_an %>%
slice(1:300)
#Libraries
library(textnets)
library(tidyverse)
library(tidytext)
library(httr)
library(jsonlite)
library(magrittr)
library(stringr)
test <- read.csv(file = "redditComments.csv")
to_an_slice <- to_an %>%
slice(1:300)
to_an_slice %>%
unnest_tokens(sentences, data.body, token = "sentences") %>%
mutate(sent_nr = row_number()) %>%
unnest_tokens(words, sentences, token="words")
#Importing Libraries
library(tidyverse)
library(udpipe)
library(ggtext)
library(magrittr)
library(igraph)
library(ggraph)
library(flextable)
#Setting Root Directory, Adding Font
setwd("E:/Charles University/Thesis/masters-thesis-code")
rm(list=ls())
windowsFonts(georgia = windowsFont("georgia"))
#Uploading Data as Tibble
anno_df <- read_csv("data/annotated_df.csv")
#Inspecting the Uploaded Data
names(anno_df)
#Creating Co-occurrences Tibble
cooc <- cooccurrence(x = subset(anno_df, upos %in% c("NOUN", "ADJ", "VERB")),
term = "lemma",
group = c("doc_id", "paragraph_id", "sentence_id"))
cooc <- as_tibble(cooc)
#Extracting Semantic Network
sem_net <- graph_from_data_frame(cooc)
rm(cooc)
gc()
phum_deg <- degree(sem_net, v="posthuman" ,mode = "all")
phum_deg
#Extracting Clustering Coefficient
clus_coef <- transitivity(sem_net, type = "barrat")
#Extracting Diameter
diameter <- diameter(sem_net, directed = TRUE, unconnected = TRUE)
rm(clus_coef)
phum_deg <- degree(sem_net, v="posthuman" ,mode = "all")
phum_clus_coef <- transitivity(sem_net, vid="posthuman", type = "barrat")
phum_clus_coef <- transitivity(sem_net, vid="subject", type = "barrat")
phum_clus_coef <- transitivity(sem_net, vid="way", type = "barrat")
phum_clus_coef <- transitivity(sem_net, vid="human", type = "barrat")
phum_clus_coef <- transitivity(sem_net, vid="posthuman", type = "barrat")
phum_clus_coef <- transitivity(sem_net, vid="work", type = "barrat")
phum_clus_coef <- transitivity(sem_net, vid="posthuman", type = "barrat")
phum_deg <- degree(sem_net, v="posthuman" ,mode = "all")
#Extracting Major Hubs
degs <- degree(sem_net, mode = "all")
cutoff <- quantile(degs, 0.95)
top_nodes <- which(degs >= cutoff)
major_hubs <- induced_subgraph(sem_net, top_nodes)
vcoutn(major_hubs)
vcount(major_hubs)
ecoutn(major_hubs)
ecount(major_hubs)
#Trimming Major Hubs Graph
major_hubs_trimmed <- delete_edges(major_hubs, E(major_hubs)[cooc < 200])
vcount(major_hubs_trimmed)
ecount(major_hubs_trimmed)
#Drawing the Major Hubs
set.seed(358)
ggraph(major_hubs, layout="fr") +
geom_node_point(color = "#262626", alpha = 0.7) +
geom_edge_link(edge_colour = "#8C8C8C", edge_alpha = 1) +
ggtitle("Diagram of the Major Hubs") +
theme(plot.title = element_textbox(face = "bold", color = "#0D0D0D",
family = "georgia", size = , hjust = 0.5),
legend.position = "none",
plot.background = element_rect(color = "#0D0D0D", size = 1),
panel.background = element_rect(fill = "#F0F0F2"))
vcount(major_hubs_trimmed)
ecount(major_hubs_trimmed)
#Drawing the Major Hubs
set.seed(358)
ggraph(major_hubs_trimmed, layout="fr") +
geom_node_point(color = "#262626", alpha = 0.7) +
geom_edge_link(edge_colour = "#8C8C8C", edge_alpha = 1) +
ggtitle("Diagram of the Major Hubs") +
theme(plot.title = element_textbox(face = "bold", color = "#0D0D0D",
family = "georgia", size = , hjust = 0.5),
legend.position = "none",
plot.background = element_rect(color = "#0D0D0D", size = 1),
panel.background = element_rect(fill = "#F0F0F2"))
#Trimming Major Hubs Graph
major_hubs_trimmed <- delete_edges(major_hubs, E(major_hubs)[cooc < 100])
vcount(major_hubs_trimmed)
ecount(major_hubs_trimmed)
#Trimming Major Hubs Graph
major_hubs_trimmed <- delete_edges(major_hubs, E(major_hubs)[cooc < 150])
vcount(major_hubs_trimmed)
ecount(major_hubs_trimmed)
#Trimming Major Hubs Graph
major_hubs_trimmed <- delete_edges(major_hubs, E(major_hubs)[cooc < 100])
vcount(major_hubs_trimmed)
ecount(major_hubs_trimmed)
#Drawing the Major Hubs
set.seed(358)
ggraph(major_hubs_trimmed, layout="fr") +
geom_node_point(color = "#262626", alpha = 0.7) +
geom_edge_link(edge_colour = "#8C8C8C", edge_alpha = 1) +
ggtitle("Diagram of the Major Hubs") +
theme(plot.title = element_textbox(face = "bold", color = "#0D0D0D",
family = "georgia", size = , hjust = 0.5),
legend.position = "none",
plot.background = element_rect(color = "#0D0D0D", size = 1),
panel.background = element_rect(fill = "#F0F0F2"))
#Extracting Major Hubs
degs <- degree(sem_net, mode = "all")
cutoff <- quantile(degs, 0.95)
top_nodes <- which(degs >= cutoff)
major_hubs <- induced_subgraph(sem_net, top_nodes)
#Trimming Major Hubs Graph
major_hubs_trimmed <- delete_edges(major_hubs, E(major_hubs)[cooc < 100])
vcount(major_hubs_trimmed)
ecount(major_hubs_trimmed)
#Drawing the Major Hubs
set.seed(358)
ggraph(major_hubs, layout="fr") +
geom_node_point(color = "#262626", alpha = 0.7) +
geom_edge_link(edge_colour = "#8C8C8C", edge_alpha = 1) +
ggtitle("Diagram of the Major Hubs") +
theme(plot.title = element_textbox(face = "bold", color = "#0D0D0D",
family = "georgia", size = , hjust = 0.5),
legend.position = "none",
plot.background = element_rect(fill = "#F0F0F2", color = "#0D0D0D", size = 1),
panel.background = element_rect(fill = "#F0F0F2"))
